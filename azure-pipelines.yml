trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: '8.3'  # Adjust as per your PHP version

steps:
# Step 1: Install PHP and required extensions
- script: |
    sudo apt-get update
    sudo apt-get install -y php${phpVersion} php${phpVersion}-fpm php${phpVersion}-mysql php${phpVersion}-mbstring php${phpVersion}-xml php${phpVersion}-curl
    sudo update-alternatives --set php /usr/bin/php${phpVersion}
    sudo update-alternatives --set php-cgi /usr/bin/php${phpVersion}
    sudo update-alternatives --set phar /usr/bin/phar${phpVersion}
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg${phpVersion}
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar${phpVersion}
    php -version
  displayName: 'Install PHP and required extensions'

# Step 2: Checkout the repository
- checkout: self
  displayName: 'Checkout repository'


# Step 4: Copy the .env file to the project directory
- task: CopyFiles@2
  displayName: 'Copy .env File'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '.env'
    TargetFolder: '/home/azureuser/development_hosting/php/laravel/FirdausOrchestra'
    OverWrite: true

# Step 3: Install Composer
- script: |
    EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)"
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    ACTUAL_SIGNATURE="$(php -r "echo hash_file('SHA384', 'composer-setup.php');")"
    if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]; then
      >&2 echo 'ERROR: Invalid installer signature'
      rm composer-setup.php
      exit 1
    fi
    php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    rm composer-setup.php
  displayName: 'Install Composer'

 # Step 6: Run PHPUnit Tests
- task: SSH@0
  inputs:
    sshEndpoint: 'staging-firdausorchestra'
    runOptions: inline
    inline: |
      cd /home/azureuser/development_hosting/php/laravel/FirdausOrchestra
    
  displayName: 'Run PHPUnit Tests'

- script: /usr/local/bin/composer install --prefer-dist --no-interaction --optimize-autoloader
  workingDirectory: ./  # Current directory
  displayName: 'Install Composer Dependencies'


# Step 7: Archive files
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

# Step 8: Publish build artifacts
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    artifactName: 'drop'
    targetPath: '$(Build.ArtifactStagingDirectory)'
