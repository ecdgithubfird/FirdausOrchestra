trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: '8.3'  # Adjust as per your PHP version

steps:
# Step 1: Install PHP and required extensions
- script: |
    sudo apt-get update
    sudo apt-get install -y php${phpVersion} php${phpVersion}-fpm php${phpVersion}-mysql php${phpVersion}-mbstring php${phpVersion}-xml php${phpVersion}-curl
    sudo update-alternatives --set php /usr/bin/php${phpVersion}
    sudo update-alternatives --set php-cgi /usr/bin/php${phpVersion}
    sudo update-alternatives --set phar /usr/bin/phar${phpVersion}
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg${phpVersion}
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar${phpVersion}
    php -version
  displayName: 'Install PHP and required extensions'

# Step 2: Checkout the repository
- checkout: self
  displayName: 'Checkout repository'

# Step 3: Run Laravel PHPUnit tests
- script: php artisan test
  displayName: 'Run PHP Artisan Tests'
  workingDirectory: '/home/azureuser/development_hosting/php/laravel/FirdausOrchestra'

# Step 4: Copy .env file (if not already included in repository)
- script: |
    if [ ! -f .env ]; then
      cp -f $(System.DefaultWorkingDirectory)/.env .env
    fi
  displayName: 'Copy .env File'

# Step 5: Install NPM dependencies
- script: npm install
  displayName: 'Install NPM Dependencies'
  workingDirectory: '/home/azureuser/development_hosting/php/laravel/FirdausOrchestra'

# Step 6: Run NPM production build
- script: npm run prod
  displayName: 'Run NPM Production Build'
  workingDirectory: '/home/azureuser/development_hosting/php/laravel/FirdausOrchestra'

# Step 7: Archive files
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

# Step 8: Publish build artifacts
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    artifactName: 'drop'
    targetPath: '$(Build.ArtifactStagingDirectory)'
